/*
 * This file is generated by jOOQ.
 */
package generated_jooq.tables.records;


import generated_jooq.tables.Posts;
import generated_jooq.tables.interfaces.IPosts;

import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> implements Record10<Long, String, String, Long, Integer, Integer, Integer, Long, LocalDateTime, LocalDateTime>, IPosts {

    private static final long serialVersionUID = -209153258;

    /**
     * Setter for <code>bysj.posts.id</code>.
     */
    @Override
    public PostsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>bysj.posts.name</code>. ??
     */
    @Override
    public PostsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.name</code>. ??
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bysj.posts.describe</code>. ??
     */
    @Override
    public PostsRecord setDescribe(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.describe</code>. ??
     */
    @Size(max = 255)
    @Override
    public String getDescribe() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bysj.posts.pv</code>. ?????
     */
    @Override
    public PostsRecord setPv(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.pv</code>. ?????
     */
    @Override
    public Long getPv() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>bysj.posts.type</code>. ???? 1-??? 0-???
     */
    @Override
    public PostsRecord setType(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.type</code>. ???? 1-??? 0-???
     */
    @Override
    public Integer getType() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>bysj.posts.stick</code>. ???? 0-? 1-?
     */
    @Override
    public PostsRecord setStick(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.stick</code>. ???? 0-? 1-?
     */
    @Override
    public Integer getStick() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>bysj.posts.check</code>. ???? 0-?? 1-??
     */
    @Override
    public PostsRecord setCheck(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.check</code>. ???? 0-?? 1-??
     */
    @Override
    public Integer getCheck() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>bysj.posts.user_id</code>. ??Id
     */
    @Override
    public PostsRecord setUserId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.user_id</code>. ??Id
     */
    @NotNull
    @Override
    public Long getUserId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>bysj.posts.created_at</code>. ????
     */
    @Override
    public PostsRecord setCreatedAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.created_at</code>. ????
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>bysj.posts.updated_at</code>. ????
     */
    @Override
    public PostsRecord setUpdatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>bysj.posts.updated_at</code>. ????
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, Long, Integer, Integer, Integer, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, Long, Integer, Integer, Integer, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Posts.POSTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Posts.POSTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Posts.POSTS.DESCRIBE;
    }

    @Override
    public Field<Long> field4() {
        return Posts.POSTS.PV;
    }

    @Override
    public Field<Integer> field5() {
        return Posts.POSTS.TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return Posts.POSTS.STICK;
    }

    @Override
    public Field<Integer> field7() {
        return Posts.POSTS.CHECK;
    }

    @Override
    public Field<Long> field8() {
        return Posts.POSTS.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Posts.POSTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Posts.POSTS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescribe();
    }

    @Override
    public Long component4() {
        return getPv();
    }

    @Override
    public Integer component5() {
        return getType();
    }

    @Override
    public Integer component6() {
        return getStick();
    }

    @Override
    public Integer component7() {
        return getCheck();
    }

    @Override
    public Long component8() {
        return getUserId();
    }

    @Override
    public LocalDateTime component9() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescribe();
    }

    @Override
    public Long value4() {
        return getPv();
    }

    @Override
    public Integer value5() {
        return getType();
    }

    @Override
    public Integer value6() {
        return getStick();
    }

    @Override
    public Integer value7() {
        return getCheck();
    }

    @Override
    public Long value8() {
        return getUserId();
    }

    @Override
    public LocalDateTime value9() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public PostsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PostsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PostsRecord value3(String value) {
        setDescribe(value);
        return this;
    }

    @Override
    public PostsRecord value4(Long value) {
        setPv(value);
        return this;
    }

    @Override
    public PostsRecord value5(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public PostsRecord value6(Integer value) {
        setStick(value);
        return this;
    }

    @Override
    public PostsRecord value7(Integer value) {
        setCheck(value);
        return this;
    }

    @Override
    public PostsRecord value8(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PostsRecord value9(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PostsRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PostsRecord values(Long value1, String value2, String value3, Long value4, Integer value5, Integer value6, Integer value7, Long value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPosts from) {
        setId(from.getId());
        setName(from.getName());
        setDescribe(from.getDescribe());
        setPv(from.getPv());
        setType(from.getType());
        setStick(from.getStick());
        setCheck(from.getCheck());
        setUserId(from.getUserId());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
    }

    @Override
    public <E extends IPosts> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Long id, String name, String describe, Long pv, Integer type, Integer stick, Integer check, Long userId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Posts.POSTS);

        set(0, id);
        set(1, name);
        set(2, describe);
        set(3, pv);
        set(4, type);
        set(5, stick);
        set(6, check);
        set(7, userId);
        set(8, createdAt);
        set(9, updatedAt);
    }
}
