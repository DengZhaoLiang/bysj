/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.User;
import generated.tables.interfaces.IUser;

import java.time.LocalDateTime;

import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Long, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime>, IUser {

    private static final long serialVersionUID = -1004037551;

    /**
     * Setter for <code>bysj.user.id</code>.
     */
    @Override
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>bysj.user.email</code>. 邮箱
     */
    @Override
    public UserRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.email</code>. 邮箱
     */
    @Size(max = 32)
    @Override
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bysj.user.phone</code>. 手机号
     */
    @Override
    public UserRecord setPhone(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.phone</code>. 手机号
     */
    @Size(max = 32)
    @Override
    public String getPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bysj.user.password</code>. 密码
     */
    @Override
    public UserRecord setPassword(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.password</code>. 密码
     */
    @Size(max = 64)
    @Override
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bysj.user.name</code>. 昵称
     */
    @Override
    public UserRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.name</code>. 昵称
     */
    @Size(max = 64)
    @Override
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bysj.user.last_login_at</code>. 最新登录时间
     */
    @Override
    public UserRecord setLastLoginAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.last_login_at</code>. 最新登录时间
     */
    @Override
    public LocalDateTime getLastLoginAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>bysj.user.created_at</code>. 创建时间
     */
    @Override
    public UserRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.created_at</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>bysj.user.updated_at</code>. 更新时间
     */
    @Override
    public UserRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>bysj.user.updated_at</code>. 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PHONE;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.NAME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return User.USER.LAST_LOGIN_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return User.USER.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return User.USER.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPhone();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public LocalDateTime component6() {
        return getLastLoginAt();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPhone();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public LocalDateTime value6() {
        return getLastLoginAt();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value6(LocalDateTime value) {
        setLastLoginAt(value);
        return this;
    }

    @Override
    public UserRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setId(from.getId());
        setEmail(from.getEmail());
        setPhone(from.getPhone());
        setPassword(from.getPassword());
        setName(from.getName());
        setLastLoginAt(from.getLastLoginAt());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String email, String phone, String password, String name, LocalDateTime lastLoginAt, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(User.USER);

        set(0, id);
        set(1, email);
        set(2, phone);
        set(3, password);
        set(4, name);
        set(5, lastLoginAt);
        set(6, createdAt);
        set(7, updatedAt);
    }
}
